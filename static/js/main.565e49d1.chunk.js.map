{"version":3,"sources":["components/Map.js","components/Search.js","App.js","serviceWorker.js","index.js"],"names":["Map","react_default","a","createElement","id","role","Component","Search","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","searchVenue","event","query","target","value","toLowerCase","markers","props","listedMarker","newMarkers","forEach","marker","title","indexOf","setVisible","push","setState","state","info","refreshList","bind","assertThisInitialized","openInfo","_this2","className","htmlFor","type","aria-label","placeholder","onChange","length","map","i","key","href","infowindow","onKeyPress","onClick","tabIndex","App","renderMap","url","tag","window","document","getElementsByTagName","script","src","async","onerror","write","parentNode","insertBefore","loadMap","initMap","getVenues","parameters","client_id","client_secret","querySelector","near","v","axios","get","URLSearchParams","then","response","venues","data","groups","items","catch","error","alert","concat","pause","e","k","setTimeout","style","color","onclickLocation","that","addEventListener","listedMarkers","innerText","newlocation","lat","venue","location","lng","center","newMarkerCenter2","google","maps","LatLng","setCenter","contentStringSearch","address","name","setContent","open","selected","setAnimation","Animation","BOUNCE","toggleNavBar","navbar","mapClass","display","width","zoom","highlightedIcon","gm_authFailure","getElementById","InfoWindow","fsVenue","contentString","markerLocation","Marker","position","icon","iconBase","addListener","newMarkerCenter","includes","message","data-toggle","components_Search","infoWindow","components_Map","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","src_App_0","URL","process","origin","fetch","status","headers","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.565e49d1.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass Map extends Component {\n\n\n    render() {\n\n        return (\n            <div id=\"map-container\">\n                <div id=\"map\" role=\"application\">\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Map;\n","import React, {Component} from 'react';\n\nclass Search extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n        info: '',\n        markers: [],\n        query: ''\n    };\n    this.refreshList = this.refreshList.bind(this)\n  }\n\n  componentDidMount() {\n    // this.setState({this.state.markers)\n    this.refreshList()\n  }\n\n  refreshList(){\n  // this.setState({markers: []});\n    this.setState({markers: this.props.listedMarker});\n  }\n\n  searchVenue = (event) => {\n    const query = event.target.value.toLowerCase();\n    const markers = this.props.listedMarker;\n    const newMarkers = [];\n\n    markers.forEach(function (marker) {\n      if (marker.title.toLowerCase().indexOf(query.toLowerCase()) >= 0) {\n        marker.setVisible(true);\n        newMarkers.push(marker);\n      } else {\n        marker.setVisible(false);\n      }\n    });\n\n    this.setState({markers: newMarkers});\n  }\n\n\n  openMarker(marker) {\n    // console.log(marker);\n    this.props.openInfo(marker);\n  }\n\n  render() {\n\n  return (\n    <div className=\"app\">\n      <div className=\"search\">\n        <div className=\"form\" role=\"form\">\n          <label htmlFor=\"search\">Search:</label>\n          <input id=\"search\" type=\"text\"\n            aria-label=\"search\" placeholder=\"Search...\"\n            className=\"input\" role=\"search\"\n            onChange={this.searchVenue}/>\n            <label htmlFor=\"search\"></label>\n        </div>\n        <ul>\n          {\n          this.state.markers &&\n          this.state.markers.length &&\n          this.state.markers.map((marker, i) =>\n            <li\n              key={i}>\n              <a href={this.props.infowindow} onKeyPress={this.props.infowindow}\n                onClick={this.props.infowindow}\n                tabIndex=\"0\" role=\"button\">{marker.title}\n              </a>\n            </li>\n          )}\n        </ul>\n      </div>\n    </div>\n    );\n  }\n}\n\nexport default Search;\n","import React, {Component} from 'react';\nimport './App.css';\nimport axios from 'axios'\nimport Map from './components/Map'\nimport Search from \"./components/Search\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      center: {\n        lat: 35.0844,\n        lng: -106.6504\n      },\n      zoom: 13,\n      map: '',\n      info: '',\n      venues: [],\n      listedMarkers: [],\n      highlightedIcon: null,\n      querySelector: 'food',\n      client_id: \"YCMGPBOPZCPOG4QYVXZ4ETGY5TLVNO34BGYAZ1NNKA3T44KS\",\n      client_secret: \"EKIC4ZUG3DJJGATRLZA2WO1W3X5L204BHM0XG2RE5IGP0GK5\"\n    };\n\n    this.initMap = this.initMap.bind(this);\n    this.onclickLocation = this.onclickLocation.bind(this)\n  }\n\n  gm_authFailure() {\n    window.alert(\"Google Maps error!\")\n  }\n  //do not do initMap in this component as we won't have venues then\n  componentDidMount() {\n    window.gm_authFailure = this.gm_authFailure;\n    // this.updateQuery()\n    this.getVenues()\n    this.onclickLocation()\n  }\n\n  renderMap = () => {\n    loadMap(\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAdlFJbHfXSdxy03hESWwqCu5z5xzEfCTw&callback=initMap\")\n    window.initMap = this.initMap\n    // window.initAutocomplete = this.initAutocomplete\n  }\n\n  //to get venues from foursquare\n  getVenues = () => {\n    const endPoint = \"https://api.foursquare.com/v2/venues/explore?\"\n    const parameters = {\n      client_id: this.state.client_id,\n      client_secret: this.state.client_secret,\n      query: this.state.querySelector,\n      // categoryId: this.state.querySelector,\n      near: \"Albuquerque\",\n      v: \"20180903\"\n    }\n\n    axios.get(endPoint + new URLSearchParams(parameters)).then(response => {\n      this.setState({\n        venues: response.data.response.groups[0].items\n      }, this.renderMap())\n      //response.data.response.groups[0].items\n    }).catch(error => {\n      window.alert(`Error: ${error}`)\n      // console.log(\"ERROR! \" + error)\n    })\n  }\n\n  initMap() {\n    let map;\n    map = new window.google.maps.Map(document.getElementById('map'), {\n      zoom: this.state.zoom,\n      center: this.state.center\n    });\n\n    const infowindow = new window.google.maps.InfoWindow({});\n\n    this.setState({map: map, info: infowindow});\n\n    this.state.venues.forEach(fsVenue => {\n\n      let contentString = `${fsVenue.venue.name} , ${fsVenue.venue.location.address}`\n\n      const markerLocation = {\n        lat: fsVenue.venue.location.lat,\n        lng: fsVenue.venue.location.lng\n      }\n      //creating the custom marker icon\n      let iconBase = 'https://maps.google.com/mapfiles/kml/shapes/';\n      let marker = new window.google.maps.Marker({\n        position: markerLocation,\n        map: map,\n        title: fsVenue.venue.name,\n        icon: iconBase + 'dining.png'\n      });\n\n      marker.addListener('click', function() {\n        // console.log(markerLocation)\n\n        marker.setAnimation(window.google.maps.Animation.BOUNCE, 1000);\n        setTimeout(function() {\n          marker.setAnimation(null);\n        }, 1500);\n        infowindow.setContent(contentString)\n        infowindow.open(map, marker)\n        //need to move a center of a map to the marker position\n        let newMarkerCenter = new window.google.maps.LatLng(markerLocation);\n        map.setCenter(newMarkerCenter)\n      });\n\n      // push markers into the array\n      let listedMarker = this.state.listedMarkers;\n      if (!listedMarker.includes(marker)) {\n        listedMarker.push(marker);\n      }\n\n      this.setState({listedMarkers: listedMarker});\n\n    });\n  }\n\n  pause = (e, k) => {\n    setTimeout(function() {\n      e.target.style.color = k;\n    }, 1500);\n  }\n\n  onclickLocation = () => {\n    let that = this\n\n    document.querySelector('.search').addEventListener('click', function(e) {\n      for (let i = 0; i < that.state.listedMarkers.length; i++) {\n        if (that.state.listedMarkers[i].title.toLowerCase() === e.target.innerText.toLowerCase()) {\n          let newlocation = {\n            lat: that.state.venues[i].venue.location.lat,\n            lng: that.state.venues[i].venue.location.lng\n          }\n          // console.log(\"newloc\", newlocation)\n          that.setState({center: newlocation})\n          let newMarkerCenter2 = new window.google.maps.LatLng(newlocation);\n          that.state.map.setCenter(newMarkerCenter2)\n\n          let contentStringSearch = that.state.venues[i].venue.location.address + ', \\n ' + that.state.venues[i].venue.name\n          that.state.info.setContent(contentStringSearch)\n          that.state.info.open(that.state.map, that.state.listedMarkers[i])\n\n          let k = e.target.style.color;\n          e.target.style.color = 'aliceBlue'; // eslint-disable-next-line no-use-before-define\n          setTimeout(function() {\n            e.target.style.color = k;\n          }, 1500);\n          // console.log(\"cont\", contentStringSearch)\n          let selected = that.state.listedMarkers[i]\n          selected.setAnimation(window.google.maps.Animation.BOUNCE);\n          // eslint-disable-next-line no-use-before-define\n          setTimeout(function() {\n            selected.setAnimation(null);\n          }, 1500);\n        }\n      }\n    })\n  }\n\n  //to toggle the side bar by clicking the hamburger button\n  toggleNavBar = () => {\n    const navbar = document.querySelector('.side');\n    const mapClass = document.querySelector('#map');\n\n    if (navbar.style.display === 'none') {\n      navbar.style.display = 'block';\n    } else {\n      navbar.style.display = 'none'\n      mapClass.style.width = '100%'\n    }\n  }\n\n  render() {\n    var message = '. You are searching for  ' + this.state.querySelector + ' venues';\n\n    // console.log(\"cat\", this.state.querySelector)\n    // console.log(\"venues\", this.state.venues)\n    return (<div className='app'>\n      <header>\n        <button aria-label=\"hide-sidebar\" type=\"button\" className=\"navbar-toggle collapsed\" data-toggle=\"collapse\" onClick={this.toggleNavBar}>\n          <div className=\"icon-bar\"></div>\n          <div className=\"icon-bar\"></div>\n          <div className=\"icon-bar\"></div>\n        </button>\n\n        <h3>Google Maps with&nbsp;\n          <a href=\"https://foursquare.com/developers/apps\">Foursquare</a>\n        </h3>\n        <h3>\n          {message}</h3>\n\n      </header>\n      <div id=\"container\">\n\n        <div className='side'>\n\n          <Search infoWindow={this.state.info} openInfo={this.info} listedMarker={this.state.listedMarkers}></Search>\n        </div>\n        <div id=\"map\">\n          <Map markers={this.state.venues.location}></Map>\n        </div>\n      </div>\n    </div>);\n  }\n}\n\nfunction loadMap(url) {\n  let tag = window.document.getElementsByTagName('script')[0];\n  let script = window.document.createElement('script');\n  script.src = url;\n  script.async = true;\n  script.onerror = function() {\n    document.write(\"Google Maps can't be loaded. Please reload the page, and if that doesn't work reload the page. Otherwise reload page.\");\n  };\n  tag.parentNode.insertBefore(script, tag);\n}\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}